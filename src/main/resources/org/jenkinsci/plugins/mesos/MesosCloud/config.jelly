<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:c="/lib/credentials">
    <f:entry title="Mesos native library path" field="nativeLibraryPath">
        <f:textbox field="nativeLibraryPath" clazz="required"/>
    </f:entry>

    <f:entry title="${%Mesos Master [hostname:port]}" field="master">
        <f:textbox clazz="required"/>
    </f:entry>

    <f:entry title="${%Description}" field="description">
        <f:textbox/>
    </f:entry>

    <f:entry title="${%Framework Name}" field="frameworkName">
        <f:textbox default="Jenkins Scheduler" clazz="required"/>
    </f:entry>

    <f:entry title="${%Role}" field="role">
        <f:textbox default="*" clazz="required"/>
    </f:entry>

    <f:entry title="${%Slave username}" field="slavesUser">
        <f:textbox default=""/>
    </f:entry>

    <f:entry field="credentialsId" title="${%Framework credentials}">
        <c:select/>
    </f:entry>

    <f:entry title="${%Jenkins URL }" field="jenkinsURL">
        <f:textbox/>
    </f:entry>

    <f:entry title="${%Cloud ID}" field ="cloudID">
 	 <f:textbox readonly="readonly" />
    </f:entry>

    <f:advanced>
        <f:entry title="${%Checkpointing}" description="${%Enable Mesos framework checkpointing?}" field="checkpoint">
            <f:radio name="checkpoint" value="true" checked="${instance.checkpoint == true}" id="checkpoint.true"/>
            <st:nbsp/>${%Yes}
            <f:radio name="checkpoint" value="false" checked="${instance == null || instance.checkpoint == false}" id="checkpoint.false"/>
            <st:nbsp/>${%No}
        </f:entry>

        <f:entry title="${%On-demand framework registration}" field="onDemandRegistration" description="${%Enable to make this cloud register as a framework when builds need to be performed. And, disconnect otherwise.}">
            <f:radio name="onDemandRegistration" value="true" checked="${instance == null || instance.onDemandRegistration == true}" id="onDemandRegistration.true"/>
            <st:nbsp/>${%Yes}
            <f:radio name="onDemandRegistration" value="false" checked="${instance.onDemandRegistration == false}" id="onDemandRegistration.false"/>
            <st:nbsp/>${%No}
        </f:entry>

        <f:entry title="${%Remote FS Root is NFS mount}" field="nfsRemoteFSRoot" description="${%Enable this option if Remote FS Root configured in SlaveInfo is a shared storage like NFS.}">
            <f:radio name="nfsRemoteFSRoot" value="true" checked="${instance == null || instance.nfsRemoteFSRoot == true}" id="nfsRemoteFSRoot.true"/>
            <st:nbsp/>${%Yes}
            <f:radio name="nfsRemoteFSRoot" value="false" checked="${instance.nfsRemoteFSRoot == false}" id="nfsRemoteFSRoot.false"/>
            <st:nbsp/>${%No}
        </f:entry>

        <f:entry title="${%Decline offer duration}" field="declineOfferDuration" description="${%Decline offers for specified amount of time in case no slave is queued. The plugin asks for new offers in case a new slave needs to be started. In seconds.}">
          <f:number clazz="required positive-number" min="1" steps="1" default="600"/>
        </f:entry>

        <f:entry>
            <f:repeatableProperty field="slaveInfos" minimum="1">
                <f:entry>
                    <div align="right" class="repeatable-delete show-if-only" style="margin-left: 1em;">
                        <f:repeatableDeleteButton value="${%Delete Slave Info}" /><br/>
                    </div>
                </f:entry>
            </f:repeatableProperty>
        </f:entry>
    </f:advanced>

    <f:validateButton title="${%Test Connection}" progress="${%Testing...}" method="testConnection" with="master,nativeLibraryPath"/>


    <script type="text/javascript">
        function checkDefaultSlave(element) {
            var checkboxes = document.getElementsByName("_.defaultSlave");
            for (var i = 0; i &lt; checkboxes.length; i++) {
                if (checkboxes[i] !== element) {
                    checkboxes[i].checked = false;
                }
            }
        }
    </script>

</j:jelly>
