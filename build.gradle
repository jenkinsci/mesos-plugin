plugins {
    id 'idea'
    id 'java-library'
    id "com.diffplug.gradle.spotless" version "3.19.0"
    id "com.github.blueboxware.tocme" version "1.1"
    id "com.github.spotbugs" version "1.7.1"
    id "org.jenkins-ci.jpi" version "0.31.0"
}

repositories {
    jcenter()
    mavenLocal()
    maven {
        name "Mesosphere Public Repo"
        url "https://downloads.mesosphere.io/maven"
    }
    maven {
        name "Mesosphere Snapshot Repo"
        url "https://downloads.mesosphere.io/maven-snapshots"
    }
}

ext {
    usiVersion= '0.1.43'
    scalaVersion = '2.13'
    akkaVersion = '2.6.3'
    junitJupiterVersion = '5.3.1'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    api 'com.google.guava:guava:26.0-jre'
    api group: 'com.mesosphere.usi', name: "core_$scalaVersion", version: usiVersion
    api group: 'com.mesosphere.usi', name: "core-models_$scalaVersion", version: usiVersion
    api group: 'com.mesosphere.usi', name: "mesos-client_$scalaVersion", version: usiVersion
    api group: 'com.mesosphere.usi', name: "mesos-master-detector_$scalaVersion", version: usiVersion
    api group: 'com.mesosphere.usi', name: "metrics-dropwizard_$scalaVersion", version: usiVersion
    api group: 'com.mesosphere.usi', name: "persistence_$scalaVersion", version: usiVersion
    api group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    api group: 'com.typesafe.akka', name: "akka-slf4j_$scalaVersion", version: akkaVersion

    jenkinsPlugins 'org.jenkins-ci.plugins:metrics:4.0.2.5@jar'
    jenkinsServer 'org.jenkins-ci.plugins:metrics:4.0.2.5'
    testRuntimeOnly 'org.jenkins-ci.plugins:metrics:4.0.2.5'

    // Test dependencies
    testImplementation 'com.squareup.okhttp3:okhttp:3.14.1'
    testImplementation 'javax.json:javax.json-api:1.1'
    testImplementation 'org.glassfish:javax.json:1.0.4'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitJupiterVersion
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion
    testImplementation group: 'com.mesosphere.usi', name: "test-utils_$scalaVersion", version: usiVersion
    testImplementation 'org.awaitility:awaitility:3.1.6'

    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.3'
}

test {
    useJUnitPlatform()
}

group = "org.jenkins-ci.plugins"
version = "2.0-beta-19"
description = "Allows the dynamic launch of Jenkins agent on a Mesos cluster, depending on workload"
sourceCompatibility = 1.8
targetCompatibility = 1.8

jenkinsPlugin {
    coreVersion = "2.164"
    displayName = "Mesos Cloud"
    shortName = "mesos-cloud"
    url = "https://wiki.jenkins-ci.org/display/JENKINS/Mesos+Plugin"
    gitHubUrl = "https://github.com/mesosphere/jenkins-mesos-plugin/"
    shortName = "mesos"

    // The developers section is optional, and corresponds to the POM developers section.
    developers {
        developer {
            id 'jeschkies'
            name 'Karsten Jeschkies'
            email 'kjeschkies@mesosphere.com'
        }
    }
}

task zipSandboxes(type: Zip) {
    def buildTag = System.getenv("BUILD_TAG") ?: "undefined"

    from 'sandboxes/'
    exclude '**/provisioner'
    archiveName "sandboxes-${buildTag.replaceAll("[^a-zA-Z0-9\\.\\-]", "-")}.zip"
}


tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotless {
    java {
        googleJavaFormat()
    }
}

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
        vcs = 'Git'
    }
}

tocme {
    variant = GitHub
    doc(file("README.md"))
}
